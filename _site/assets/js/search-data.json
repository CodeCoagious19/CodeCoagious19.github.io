{"0": {
    "doc": "Chi sono",
    "title": "Ciao..",
    "content": "Sono Simone, sono un programmatore C embededd appassionato di elettronica e informatica. Visita la sezione Tutorial o la mia pagina GitHub . GitHub Tutorial . ",
    "url": "http://localhost:4000/chisono/#ciao",
    "relUrl": "/chisono/#ciao"
  },"1": {
    "doc": "Chi sono",
    "title": "Chi sono",
    "content": " ",
    "url": "http://localhost:4000/chisono/",
    "relUrl": "/chisono/"
  },"2": {
    "doc": "Pagina Iniziale",
    "title": "Ciao..",
    "content": "Sono Simone, sono un programmatore C embededd appassionato di elettronica e informatica. Visita la sezione Tutorial o la mia pagina GitHub . GitHub Tutorial . ",
    "url": "http://localhost:4000/#ciao",
    "relUrl": "/#ciao"
  },"3": {
    "doc": "Pagina Iniziale",
    "title": "Pagina Iniziale",
    "content": " ",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },"4": {
    "doc": "Installazione e setup di Ubuntu in dual boot con Windows",
    "title": "Installazione e setup di Ubuntu in dual boot con Windows",
    "content": "Se stai leggendo questa guida avrai sentito parlare di Ubuntu e sarai quindi curioso di provarlo sul tuo PC tuttavia probabilmente sei un po’ titubante perchè non sai se riuscirai ad installarlo e soprattutto, qualora qualcosa andasse storto, a tornare indietro. Imbattendoti in altre guide ti sei trovato davanti in procedure mai viste e hai paura di scassare il tuo PC o peggio ancora a ricorrere all’assistenza per una stupida infatuazione del sistema operativo Ubuntu. In questa guida ti guiderò passo passo nell’installazione di Ubuntu 20.10 (ma va bene anche per la 20.04 LTS) e soprattutto ti darò la possibilità di “tornare indietro” alla tua attuale configurazione con Windows come se non fosse successo niente. ",
    "url": "http://localhost:4000/tutorial/installa-ubunutu/installa-ubuntu.html",
    "relUrl": "/tutorial/installa-ubunutu/installa-ubuntu.html"
  },"5": {
    "doc": "Installazione e setup di Ubuntu in dual boot con Windows",
    "title": "Indice",
    "content": ". | E’ facile o difficile installare Ubuntu? | Installazione di Ubuntu . | 1. Collegati alla pagina ufficiale | 2. Crea un disco di avvio tramite penna USB . | Creazione di un disco di avvio tramite penna USB su Windows | Creazione di un disco di avvio tramite penna USB su Ubuntu | . | 3. Riavvia il PC nel bios/uefi menu | 4. Avvia ubuntu tramite penna USB | 5. Prova o installa ubuntu | 6. Installa Ubuntu | 7. GRUB Manager | . | Post-Installazione | Applicazioni utili per tutti . | VLC media player | Chromium web browser | Telegram | Gimp | GNOME tweaks | . | Applicazioni utili per programmatori . | git | Visual studio code | peek - gif video recorder | . | Rimozione di Ubuntu da dual-boot tramite Windows | . ",
    "url": "http://localhost:4000/tutorial/installa-ubunutu/installa-ubuntu.html#indice",
    "relUrl": "/tutorial/installa-ubunutu/installa-ubuntu.html#indice"
  },"6": {
    "doc": "Installazione e setup di Ubuntu in dual boot con Windows",
    "title": "E’ facile o difficile installare Ubuntu?",
    "content": "Se non hai mai installato o ripristinato un sistema operativo sul tuo PC come Windows potresti non essere a conoscenza di certe procedure che potrebbero spaventarti, mi riferisco al punto 3. Riavvia il PC nel bios/uefi menu. Prima di iniziare questo tutorial dovresti dare un’occhiata a questa sezione e vedere se riesci a muoverti con il tuo PC come descritto. Se trovi difficoltà o trovi un’interfaccia diversa da quella mostrata in figura capisco che tu possa spaventarti, purtroppo ogni computer ha il suo software di gestione del BIOS. In questo caso è richiesta la massima attenzione e per questo ti consiglio di leggere più e più volte questa sezione finchè non sarà tutto chiaro prima di procedere con l’installazione di Ubunutu. Questa è l’unica potenziale difficoltà che troverai. ",
    "url": "http://localhost:4000/tutorial/installa-ubunutu/installa-ubuntu.html#e-facile-o-difficile-installare-ubuntu",
    "relUrl": "/tutorial/installa-ubunutu/installa-ubuntu.html#e-facile-o-difficile-installare-ubuntu"
  },"7": {
    "doc": "Installazione e setup di Ubuntu in dual boot con Windows",
    "title": "Installazione di Ubuntu",
    "content": "1. Collegati alla pagina ufficiale . ubuntu.com e scarica la versione di Ubuntu che preferisci. Consiglio sempre di installare le versioni LTS (come la 20.04 LTS) poichè sono quelle più supportate e stabili. In questa guida installerò la versione 20.10 ma la procedura è la stessa anche per la 20.04 LTS . A fine download verrà scaricato un file con estensione .iso, ad esempio nel caso della versione 20.10 sarà ubuntu-20.10-desktop-amd64.iso. Il file appena scaricato è detto file immagine e deve essere trasferito e scompattato su CD o su penna USB creando un disco di avvio. Ti consiglio di procurarti una penna USB da almeno 8Gb vuota o con dei file che non ritieni importanti. L’intero contenuto della penna USB verrà sovra-iscritto con il contenuto del file immagine di Ubuntu . 2. Crea un disco di avvio tramite penna USB . Procurati una penna USB da almeno 8Gb e inseriscila nel PC. Se sei su Windows segui la procedura Creazione di un disco di avvio tramite penna USB su Windows, se sei su ubuntu segui invece Creazione di un disco di avvio tramite penna USB su Ubuntu . Creazione di un disco di avvio tramite penna USB su Windows . Scarica ed esegui il software Rufus. Dovrai selezionare nella scheda Dispositivo/unità la penna USB appena inserita, dopodichè tramite il pulsante SELEZIONA dovrai scegliere il file immagine di ubuntu ubuntu-20.10-desktop-amd64.iso. Delle impostazioni successive ti consiglio di impostare: . | Schema partizione: MBR | Sistema destinazione: UEFI (non CSM) | . Premi su AVVIA e attendi che abbia finito . Nota: Potrebbe comparire un messaggio chiedendo la connessione ad internet per scaricare dalla rete alcuni file importanti per il boot di Ubunut, acconsenti e procedi . Creazione di un disco di avvio tramite penna USB su Ubuntu . Apri il software “Creatore dischi di avvio” e seleziona, nella scheda superiore, la sorgente che nel nostro caso sarà ubuntu-20.10-desktop-amd64.iso e, nella scheda inferiore, il disco da usare ovvero la penna USB appena inserita. Dopodichè clicca su Crea disco di avvio. Una volta terminata la procedura sarai pronto per lanciare ubuntu e installarlo . 3. Riavvia il PC nel bios/uefi menu . Una volta che hai caricato il sistema operativo Ubuntu sulla penna USB dovrai istruire il tuo PC ad accendersi e leggere il contenuto della penna USB anzichè il sistema operativo Windows installato sul tuo hard disk interno. Per far ciò dovrai ravviare il computer in un menù speciale detto BIOS e cambiare il cosìdetto boot order. Devi sapere infatti che all’accensione del PC, questo software fa una semplice scansione tra tutti i dischi rigidi alla ricerca di un sistema avviabile, nel nostro caso un sistema operativo. Poichè in prima posizione c’è di default la voce Internal hard drive o qualcosa del genere significa che all’accensione verrà sempre controllato se c’è un sistema operativo sull’hard disk interno, troverà Windows installato e lo caricherà. Se per qualche assurdo motivo (l’hard disk viene danneggiato o formattato) il BIOS non troverà un sistema avviabile nell’hard disk, passerà alla seconda voce che probabilmente sarà CD-ROM drive e quindi cercherà un sistema avviabile all’interno del CD inserito nel lettore CD e così via. Tra queste voci c’è anche la voce Removable devices o USB o USB Hard Disk o USB HDD o voci simili che rappresenta proprio la penna USB. Quello che dobbiamo riuscire a fare sarà semplicemente spostare questa voce in prima posizione in modo da poter finalmente istruire il PC a partire tramite il sistema avviabile che sta sulla penna USB, Ubuntu. Per accedere al BIOS menu’ dovrai riavviare il PC e probabilmente dovrai premere ripetutamente il tasto F2 o F12 oppure ESC o F10. Se fai attenzione, appena si avvia il PC in basso compare per un istante una scritta con le indicazioni del tasto da premere per entrare nel BIOS menu. Ecco un esempio in cui per accedere al menu’ è necessario premere il tasto DEL . Lifewire - Change the Boot Order in BIOS . Se siete riusciti ad entrare nel BIOS menu probabilmente vi apparirà a schermo un’interfaccia del genere: . Lifewire - Change the Boot Order in BIOS . Il BIOS è un software essenziale ben lontano dalle attuali app Android. Per muoversi all’interno del menu’ è possibile consultare le indicazioni riportate in fondo allo schermo. In genere ci si muove con i tasti freccia, si esce con il tasto ESC e si esce salvando le impostazioni con F10. Devi raggiungere la scheda Boot. A questo punto appariranno le opzioni di boot elencate in ordine di priorità. Lifewire - Change the Boot Order in BIOS . Devi riuscire a spostare l’opzione relativa al disco USB, Removable devices o USB o USB Hard Disk o USB HDD o voci simili alla prima posizione. In molti casi per spostare le voci su utilizzano i tasti F5/F6 oppure i tasti +/-. Quando sarai riuscito a spostarla in prima posizione premi F10, salverai le modifiche e al prossimo avvio il PC scansionerà i dischi a partire dalla penna USB che hai inserito con Ubuntu pronto a partire. E’ tutto! . 4. Avvia ubuntu tramite penna USB . Una volta settato l’avvio tramite penna USB, mantieni collegata la penna USB e riavvia il PC. Apparirà una schermata simile alla seguente . linux.org . Scegli la prima opzione Ubuntu e attendi che la procedura abbia finito. 5. Prova o installa ubuntu . Appena avviato, si aprirà la procedura di installazione. Vi chiederà se vorrete provare Ubuntu (Try Ubuntu) o se vorrete installarlo (Install Ubunutu) . Se per voi è la prima volta vi consiglio l’opzione Try Ubuntu. Potrete navigare tra le applicazioni, nel file manager o nelle impostazioni per prendere familiarità con i settaggi principali. Non abbiate paura di fare pasticci. Ubuntu “vive” nella vostra penna USB. Troverete comunque il link di accesso rapido al setup di installazione sul desktop . 6. Installa Ubuntu . Riporto passo passo la procedura wizard per l’installazione di ubuntu. Se avete scelto Install Ubuntu o avete aperto il link rapido alla wizard sul desktop seguite i seguenti passaggi. Selziona una lingua . Selziona il tipo di tastiera . Seleziona una rete wifi . Scegli il tipo di installazione . Se è la prima volta che installate Ubuntu, ti consiglio Installazione normale. Con questo tipo di installazione verranno aggiunti software e altri pacchetti utili e ti aiuta in fase di post-installazione. Spunta anche le altre opzioni come in figura . Dual boot? . Se è la prima volta che installate Ubuntu, ti consiglio di installare ubuntu a fianco di windows, nella cosìdetta modalità dual-boot. Ciò ti consentirà di avere sia Windows che Ubuntu sul tuo PC e di poter scegliere quale dei due sistemi operativi lanciare all’accensione del PC. E’ fortemente consigliata questa modalità per chi è alle prime armi con Ubuntu perchè per qualsiasi pasticcio tu possa combinare con Ubuntu potrai sempre riavviare il PC e lanciare windows per ripristinare il sistema. Personalmente uso questa modalità. Scegli la dimensione della partizione Ubuntu . E’ possibile scegliere quanta dimensione di spazio fisso allocare a Ubuntu e quanta lasciare per Windows. Se sei alla prima installazione di Ubuntu ti consiglio di allocare circa 100Gb in base anche ai programmi che hai intenzione di installare . Clicca su Installa e accetta i messaggi successivi. Imposta la località . Imposta lu tue informazioni personali . Scegli un nome per l’account e una password di accesso. Attendi la fine della procedura di installazione . Riavvia il pc . Togli la penna USB . Quando compare la seguente schermata (o simile), togli la penna USB e premi Invio . SHAILESHJHA.com . 7. GRUB Manager . Al riavvio, se hai scelto la modalità dual boot dovrebbe apparire la schermata del software di gestione del dual boot, GRUB. Una cosa del genere.. Nel tuo caso apparirà la voce Ubuntu e Windows boot manager. Ogni volta che accenderai il PC avrai la possibilità di scegliere il sistema operativo da lanciare. Nota: normalmente il software ha un timeout di circa 10 secondi. Se non si sceglie nessuna opzione sceglierà la prima che in questo caso è Ubuntu . ",
    "url": "http://localhost:4000/tutorial/installa-ubunutu/installa-ubuntu.html#installazione-di-ubuntu",
    "relUrl": "/tutorial/installa-ubunutu/installa-ubuntu.html#installazione-di-ubuntu"
  },"8": {
    "doc": "Installazione e setup di Ubuntu in dual boot con Windows",
    "title": "Primo avvio",
    "content": "Una volta avviato Ubuntu da grub ti chiederà di effettuare l’accesso ad un account. Se effettuerai l’accesso tramite google, troverai tra i documenti il link rapido a google drive, indicato tramite l’email . Contemporaneamente si attiverà l’applicazione “Aggiornamenti software” che verificherà la presenza di aggiornamenti . Attendi che il processo finisca e riavvia il PC. ",
    "url": "http://localhost:4000/tutorial/installa-ubunutu/installa-ubuntu.html#primo-avvio",
    "relUrl": "/tutorial/installa-ubunutu/installa-ubuntu.html#primo-avvio"
  },"9": {
    "doc": "Installazione e setup di Ubuntu in dual boot con Windows",
    "title": "Post-Installazione",
    "content": "Una volta riavviato il PC apri il terminale con il comando Ctrl + Alt + T oppure tramite l’applicazione “Terminale” che puoi trovare nella lista delle applicazioni. Per un aggiornamento manuale del sistema digita: . sudo apt update &amp;&amp; sudo apt upgrade -y . Devo utilizzare obbligatoriamente il Terminale? 🤔 La maggior parte delle cose interessanti con Ubuntu si fanno attraverso il Terminale ma non devi spaventarti, non ha niente a che vedere con il prompt dei comandi di Windows. All’inizio ti limiterai a copiare qualche comando dal web senza capire molto (immagino che molti abbiano utilizzato questo approccio, il sottoscritto compreso) e non è raro che tu possa creare dei pasticci assolutamente rimediabili ma non certo da un utente inesperto ecco perchè ti ho consigliato di installare Ubuntu a fianco di Windows, così se avrai dei problemi potrai formattare la partizione di Ubuntu e riprovarci (non nego che l’ho fatto diverse volte) oppure abbandonare se pensi che il gioco non valga la candela.. ",
    "url": "http://localhost:4000/tutorial/installa-ubunutu/installa-ubuntu.html#post-installazione",
    "relUrl": "/tutorial/installa-ubunutu/installa-ubuntu.html#post-installazione"
  },"10": {
    "doc": "Installazione e setup di Ubuntu in dual boot con Windows",
    "title": "Applicazioni utili per tutti",
    "content": "Prima di installare qualche applicazione interessante apri il terminale con il comando Ctrl + Alt + T oppure tramite l’applicazione “Terminale” che puoi trovare nella lista delle applicazioni e aggiorna il sistema con il comando: . sudo apt-get upgrade . Ecco una breve lista di applicazioni utili per tutti che ho deciso di riportare: . | VLC media player | Chromium web browser | Telegram | Gimp | GNOME tweaks | . VLC media player . VLC media player è un software di riproduzione multimediale gratuito e open source, portatile, multipiattaforma e un server multimediale in streaming sviluppato dal progetto VideoLAN, VLC - official webpage . Per installarlo digita da terminale: . sudo snap install vlc . Chromium web browser . Chromium è un browser per la navigazione web free e open source, chromium - offical webpage . Per installarlo digita da terminale: . sudo apt-get install chromium-browser . Telegram . Telegram è un servizio di messaggistica istantanea, videochiamata e VoIP multipiattaforma basato su cloud, Telegram - offical webpage . Per installarlo digita da terminale: . sudo snap install telegram-desktop . Gimp . GIMP è un editor di grafica raster gratuito e open source utilizzato per la manipolazione e l’editing di immagini o il disegno in forma libera, gimp - official webpage . Per installarlo digita da terminale: . sudo snap install gimp . GNOME tweaks . GNOME Tweak Tool è un’estensione della shell GNOME che puoi usare per modificare l’interfaccia GNOME . Cosa puoi fare con Gnome-tweaks? Puoi cambiare font o l’aspetto della barra superiore, togliere animazioni.. e richiamare altre estensioni che ti permettondo di estendere la personalizzazione dell’interfaccia grafica . E’ possibile installarlo dall’applicazione “Ubuntu Software” cercando nella barra di ricerca “Tweaks” o “Personalizzazioni” . Troverete l’applicazione sotto il nome di “Personalizzazioni”. ",
    "url": "http://localhost:4000/tutorial/installa-ubunutu/installa-ubuntu.html#applicazioni-utili-per-tutti",
    "relUrl": "/tutorial/installa-ubunutu/installa-ubuntu.html#applicazioni-utili-per-tutti"
  },"11": {
    "doc": "Installazione e setup di Ubuntu in dual boot con Windows",
    "title": "Applicazioni utili per programmatori",
    "content": "Ecco una breve lista di applicazioni utili per programmatori che ho deciso di riportare: . | git | Visual studio code | peek - gif video recorder | . git . Git è un sistema di controllo di versione distribuito gratuito e open source progettato per gestire qualsiasi progetto software, dai più piccoli ai più grandi vantando velocità ed efficienza, git - official webpage . Per installarlo digita da terminale: . sudo apt-get install git . Visual studio code . Visual Studio Code è un editor di test gratuito realizzato da Microsoft per Windows, Linux e macOS, VS code - offical webpage . Per installarlo digita da terminale: . sudo snap install code --classic . Riporto anche alcune estensioni utili: . | Python (ms-python.python) | Live Server (ritwickdey.liveserver) | JavaScript (ES6) code snippets (xabikos.javascriptsnippets) | HTML Snippets (abusaidm.html-snippets) | Atom One Dark Theme (akamud.vscode-theme-onedark) | Markdown Preview Github Styling (bierner.markdown-preview-github-styles) | . peek - gif video recorder . peek è un semplice registratore di schermo che consente l’esportazione diretta in formato .gif. Il progetto è free e open source, peek - offical webpage . Per installarlo digita da terminale: . sudo add-apt-repository ppa:peek-developers/stable sudo apt update sudo apt install peek . ",
    "url": "http://localhost:4000/tutorial/installa-ubunutu/installa-ubuntu.html#applicazioni-utili-per-programmatori",
    "relUrl": "/tutorial/installa-ubunutu/installa-ubuntu.html#applicazioni-utili-per-programmatori"
  },"12": {
    "doc": "Installazione e setup di Ubuntu in dual boot con Windows",
    "title": "Rimozione di Ubuntu da dual-boot tramite Windows",
    "content": "Qualcosa non va con Ubuntu? Vuoi tornare ad avere Windows come unica partizione? Nessun problema.. Una buona guida non dovrebbe solo aiutarti a raggiungere uno scopo ma anche a tornare indietro. | Clicca con il tasto destro su start e seleziona “Gestione disco”. Il software “Gestione disco” mostra tutte le partizioni presenti su disco. | Tra le partizioni troverai sicuramente (C:) ovvero la partizione principale Windows e altre partizioni che potranno essere identificate con il nome (Disco 0 partizione 0), (Disco 0 partizione 4) e così via.. Tra queste partizioni dovresti cercare una partizione che abbia una dimensione considerevole o, per essere più precisi, quella che hai impostato per ubuntu in fase di installazione dual-boot. Se ad esempio hai riservato 100Gb per ubuntu in fase di installazione, sarà la partizione da 100Gb ad dover essere eliminata. Non toccare le partizioni da qualche centinaia di Mb o pochi Gb, potrebbero essere riservate al sistema Windows. | . Nota: Nella scheda centrale di “Gestione disco” trovate una descrizione dettagliata delle partizioni. Dovresti essere in grado di individuare facilmente la Partizione Primaria che non rappresenta (C:) . Una volta individuata clicca con il tasto destro sulla partizione e seleziona Elimina Volume.. A questo punto non ti resta che estendere il volume (C:) (l’unica partizione valida) comprendendo la partizione non più allocata e ti ritroverai nella condizione esatta prima dell’installazione in dual boot di Ubunutu. Per far ciò clicca con il tasto destro sulla partizione (C:) e seleziona la voce Estendi Volume.. ",
    "url": "http://localhost:4000/tutorial/installa-ubunutu/installa-ubuntu.html#rimozione-di-ubuntu-da-dual-boot-tramite-windows",
    "relUrl": "/tutorial/installa-ubunutu/installa-ubuntu.html#rimozione-di-ubuntu-da-dual-boot-tramite-windows"
  },"13": {
    "doc": "Tutorial",
    "title": "Tutorial",
    "content": " ",
    "url": "http://localhost:4000/tutorial/",
    "relUrl": "/tutorial/"
  },"14": {
    "doc": "Crea il tuo sito tramite GitHub Pages e jekyll",
    "title": "Crea il tuo sito tramite GitHub Pages e jekyll",
    "content": "Jekyll è un semplice generatore di siti statici, compatibile con i blog, per siti personali, di progetto o di organizzazione. Scritto in Ruby da Tom Preston-Werner, co-fondatore di GitHub, è distribuito con licenza open source MIT . ",
    "url": "http://localhost:4000/tutorial/website-jekyll-githubPages/website-jekyll-githubPages.html",
    "relUrl": "/tutorial/website-jekyll-githubPages/website-jekyll-githubPages.html"
  },"15": {
    "doc": "Crea il tuo sito tramite GitHub Pages e jekyll",
    "title": "Prerequisiti",
    "content": "Devi aver installato jekyll e git . ",
    "url": "http://localhost:4000/tutorial/website-jekyll-githubPages/website-jekyll-githubPages.html#prerequisiti",
    "relUrl": "/tutorial/website-jekyll-githubPages/website-jekyll-githubPages.html#prerequisiti"
  },"16": {
    "doc": "Crea il tuo sito tramite GitHub Pages e jekyll",
    "title": "Installazione di jekyll su Ubuntu",
    "content": "Devi installare tutte le dipendenze: . | ruby | rubygems | gcc | make | . Il seguente comando installa tutte le dipendenze necessarie: . sudo apt-get install ruby-full build-essential zlib1g-dev . Evita di installare i pacchetti RubyGems (chiamati gems) come utente root. Invece, imposta una directory di installazione gem per il tuo account utente. I seguenti comandi aggiungeranno variabili d’ambiente al tuo file ~ / .bashrc per configurare il percorso di installazione di gem: . echo '# Install Ruby Gems to ~/gems' &gt;&gt; ~/.bashrc echo 'export GEM_HOME=\"$HOME/gems\"' &gt;&gt; ~/.bashrc echo 'export PATH=\"$HOME/gems/bin:$PATH\"' &gt;&gt; ~/.bashrc source ~/.bashrc . Installa jekyll e bundler . gem install jekyll bundler . Jekyll on Ubuntu . Con questa procedura installerai l’ultima versione di jekyll. Per verificare la versione installata digita: . jekyll -v . In generale la versione di jekyll appena installata differisce da quella utilizzata da GitHub Pages per il deploy (pubblicazione) di una pagina web. Per verificare la versione utilizzata da GitHub Pages, visita GitHub pages - Dependency versions. Per evitare problemi consiglio di allinearsi alla versione di jekyll utilizzata da GitHub Pages ma solo in fase di creazione di un nuovo sito, quindi con un’installazione locale alla directory contente il progetto. Nei prossimi passaggi vedremo come fare.. Crea il tuo primo sito . Crea una nuova directory con un nome a piacere, ad esempio myWebPage. Apri il terminale all’interno della repository appena creata e digita il comando per creare una nuova base per il sito. jekyll new . Adesso, lanciando il comando: . jekyll serve . Dovrebbe rispondere con qualcosa del genere: . Configuration file: /home/s/Repository/myWebPage/_config.yml Source: /home/s/Repository/myWebPage Destination: /home/s/Repository/myWebPage/_site Incremental build: disabled. Enable with --incremental Generating... Jekyll Feed: Generating feed for posts done in 0.211 seconds. Auto-regeneration: enabled for '/home/s/Repository/myWebPage' Server address: http://127.0.0.1:4000/ Server running... press ctrl-c to stop. Raggiungi l’indirizzo indicato dal campo Server address, nel mio caso http://127.0.0.1:4000/, da terminale è sufficiente un Ctrl + click o semplicemente copiando l’indirizzo su browser web. A questo punto dovresti vedere l’anteprima del tuo sito. Di default verrà impostato un tema dal nome minima . Non ti preoccupare adesso dei contenuti, avrai modo di configurarli con calma una volta finito il setup. Come dicevo, adesso ti consiglio di allinearti alla versione di jekyll utilizzata da GitHub Pages. Apri la directory del progetto, nel mio caso myWebPage. Troverai una serie di file: . La nostra concentrazione per adesso va ai file Gemfile, Gemfile.lock e _config.yml. Apri il file Gemfile, troverai questo contenuto scritto nel linguaggio Ruby: . source \"https://rubygems.org\" # Hello! This is where you manage which Jekyll version is used to run. # When you want to use a different version, change it below, save the # file and run `bundle install`. Run Jekyll with `bundle exec`, like so: # # bundle exec jekyll serve # # This will help ensure the proper Jekyll version is running. # Happy Jekylling! gem \"jekyll\", \"~&gt; 4.1.1\" # This is the default theme for new Jekyll sites. You may change this to anything you like. gem \"minima\", \"~&gt; 2.5\" # If you want to use GitHub Pages, remove the \"gem \"jekyll\"\" above and # uncomment the line below. To upgrade, run `bundle update github-pages`. # gem \"github-pages\", group: :jekyll_plugins # If you have any plugins, put them here! group :jekyll_plugins do gem \"jekyll-feed\", \"~&gt; 0.12\" end # Windows and JRuby does not include zoneinfo files, so bundle the tzinfo-data gem # and associated library. platforms :mingw, :x64_mingw, :mswin, :jruby do gem \"tzinfo\", \"~&gt; 1.2\" gem \"tzinfo-data\" end # Performance-booster for watching directories on Windows gem \"wdm\", \"~&gt; 0.1.1\", :platforms =&gt; [:mingw, :x64_mingw, :mswin] . Tra i commenti del file troviamo diverse indicazioni su come procedere per utilizzare GitHub Pages. In particolare devi impostare la versione di jekyll utilizzata da GitHub, nel mio caso 3.9.0, consultabile da GitHub pages - Dependency versions. gem \"jekyll\", \"~&gt; 3.9.0\" . e devi inserire anche la direttiva giusta per github-pages con l’attuale versione di GitHub Pages consultabile sempre da GitHub pages - Dependency versions. Nel mio caso la versione è la 209 . gem \"github-pages\", \"~&gt; 209\", group: :jekyll_plugins . Il file completo sarà: . source \"https://rubygems.org\" # Hello! This is where you manage which Jekyll version is used to run. # When you want to use a different version, change it below, save the # file and run `bundle install`. Run Jekyll with `bundle exec`, like so: # # bundle exec jekyll serve # # This will help ensure the proper Jekyll version is running. # Happy Jekylling! gem \"jekyll\", \"~&gt; 3.9.0\" # This is the default theme for new Jekyll sites. You may change this to anything you like. gem \"minima\" #gem \"minima\", \"~&gt; 2.5\" # If you want to use GitHub Pages, remove the \"gem \"jekyll\"\" above and # uncomment the line below. To upgrade, run `bundle update github-pages`. gem \"github-pages\", \"~&gt; 209\", group: :jekyll_plugins # If you have any plugins, put them here! group :jekyll_plugins do gem \"jekyll-feed\", \"~&gt; 0.12\" end # Windows and JRuby does not include zoneinfo files, so bundle the tzinfo-data gem # and associated library. platforms :mingw, :x64_mingw, :mswin, :jruby do gem \"tzinfo\", \"~&gt; 1.2\" gem \"tzinfo-data\" end # Performance-booster for watching directories on Windows gem \"wdm\", \"~&gt; 0.1.1\", :platforms =&gt; [:mingw, :x64_mingw, :mswin] . A questo punto puoi salvare ed eliminare il file Gemfile.lock. Questo file infatti contiene tutte le dipendenze ed è generato a partire dal file Gemfile. Ne dovrai generare uno nuovo. Da terminale, all’interno della directory del progetto digita: . bundle install . Verrà generato un nuovo Gemfile.lock con tutte le dipendenze necessarie per GitHub Pages. Adesso, per lanciare l’anteprima della pagina, non puoi più utilizzare il comando jekyll serve poichè tale comando invocherà la versione di jekyll installata globalmente sul tuo PC e quindi risulteresti non allineato. Dovrai lanciare il comando bundle exec jekyll serve come suggerito dal file Gemfile in modo da garantire che venga eseguita la versione di jekyll indicata dal file Gemfile e non quella installata su PC. Digita quindi: . bundle exec jekyll serve . A questo punto sei quasi pronto per pubblicare il tuo sito tramite GitHub Pages. ",
    "url": "http://localhost:4000/tutorial/website-jekyll-githubPages/website-jekyll-githubPages.html#installazione-di-jekyll-su-ubuntu",
    "relUrl": "/tutorial/website-jekyll-githubPages/website-jekyll-githubPages.html#installazione-di-jekyll-su-ubuntu"
  },"17": {
    "doc": "Crea il tuo sito tramite GitHub Pages e jekyll",
    "title": "Pubblica il sito su GitHub Pages",
    "content": "Crea una repository vuota e pubblica su GitHub. Ti consiglio di dare lo stesso nome della directory utilizzata nel progetto, nel mio caso myWebPage. Il nome appena creato coinciderà con la subdirectory dell’indirizzo della propria pagina web che nel mio caso sarà: https://simonediricco1.github.io/myWebPage/. Adesso torna alla directory del progetto e aggiungiamo quindi il subpath myWebPage all’interno del file _config.yml, . baseurl: \"/myWebPage\" # the subpath of your site, e.g. /blog . Il file completo sarà una cosa del genere: . # Welcome to Jekyll! # # This config file is meant for settings that affect your whole blog, values # which you are expected to set up once and rarely edit after that. If you find # yourself editing this file very often, consider using Jekyll's data files # feature for the data you need to update frequently. # # For technical reasons, this file is *NOT* reloaded automatically when you use # 'bundle exec jekyll serve'. If you change this file, please restart the server process. # # If you need help with YAML syntax, here are some quick references for you: # https://learn-the-web.algonquindesign.ca/topics/markdown-yaml-cheat-sheet/#yaml # https://learnxinyminutes.com/docs/yaml/ # # Site settings # These are used to personalize your new site. If you look in the HTML files, # you will see them accessed via SiDiRi, simone.diricco.1@gmail.com, and so on. # You can create any custom variable you would like, and they will be accessible # in the templates via . title: Your awesome title email: your-email@example.com description: &gt;- # this means to ignore newlines until \"baseurl:\" Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description. baseurl: \"/myWebPage\" # the subpath of your site, e.g. /blog url: \"\" # the base hostname &amp; protocol for your site, e.g. http://example.com twitter_username: jekyllrb github_username: jekyll # Build settings theme: minima plugins: - jekyll-feed # Exclude from processing. # The following items will not be processed, by default. # Any item listed under the `exclude:` key here will be automatically added to # the internal \"default list\". # # Excluded items can be processed by explicitly listing the directories or # their entries' file path in the `include:` list. # # exclude: # - .sass-cache/ # - .jekyll-cache/ # - gemfiles/ # - Gemfile # - Gemfile.lock # - node_modules/ # - vendor/bundle/ # - vendor/cache/ # - vendor/gems/ # - vendor/ruby/ . A questo punto lancia nuovamente il comando: . bundle exec jekyll serve . Bene, sei pronti a trasformare la directory nella repository GitHub che ospiterà la tua pagina web. Tramite git digita: . git init git add . git commit -m \"initial\" git branch -M master git remote add origin git@github.com:simonediricco1/myWebPage.git git push -u origin master . Adesso, tornando su GitHub alla repository myWebPage dovresti trovare gli stessi file che hai localmente. Non resta che istruire la repository ad ospitare una pagina web. Apri la Repository e vai su Settings, sezione GitHub Pages. Seleziona il branch master, premi il tasto Save, una volta aggiornata la pagina, se torni alla sezione GitHub Pages dovresti trovare: . Your site is published at https://simonediricco1.github.io/myWebPage/ . Cliccando sul link dovresti visualizzare la tua pagina. Sei online! . ",
    "url": "http://localhost:4000/tutorial/website-jekyll-githubPages/website-jekyll-githubPages.html#pubblica-il-sito-su-github-pages",
    "relUrl": "/tutorial/website-jekyll-githubPages/website-jekyll-githubPages.html#pubblica-il-sito-su-github-pages"
  },"18": {
    "doc": "Crea il tuo sito tramite GitHub Pages e jekyll",
    "title": "Temi jekyll",
    "content": "Adesso vedrai come impostare il tema just-the-docs . Questo tema, non essendo tra quelli ufficialmente supportati da GitHub va aggiunto in un atro modo. Ovviamente questa guida vale anche per altri temi. Modifica il Gemfile inserendo al posto di: . gem \"minima\" . Il tema just-the-docs: . gem \"just-the-docs\" . Modifica file _config.yml inserendo al posto di: . theme: minima . remote_theme: pmarsceill/just-the-docs . Adesso cancella il file Gemfile.lock e lancia nuovamente: . bundle install . Per vedere l’anteprima lancia nuovamente il comando: . bundle exec jekyll serve . A questo punto esegui il commit e il push delle modifiche. git add . git commit -m \"add other theme\" git push . Verrà eseguito il deploy in automatico. L’anteprima di questo tema è una cosa del genere: . Risoluzione problemi . | just-the-docs | . ",
    "url": "http://localhost:4000/tutorial/website-jekyll-githubPages/website-jekyll-githubPages.html#temi-jekyll",
    "relUrl": "/tutorial/website-jekyll-githubPages/website-jekyll-githubPages.html#temi-jekyll"
  }
}
